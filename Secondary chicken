using UnityEngine;

public class StrongerChicken : MonoBehaviour
{
    public int health = 250; // Increased health
    public GameObject eggPrefab;
    public Transform firePoint; // Position where the egg is spawned
    public float eggSpeed = 12f; // Slightly faster eggs
    public float fireRate = 0.8f; // Faster shooting speed

    private float nextFireTime = 0f;

    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space) && Time.time >= nextFireTime)
        {
            ShootEgg();
            nextFireTime = Time.time + fireRate;
        }
    }

    void ShootEgg()
    {
        GameObject egg = Instantiate(eggPrefab, firePoint.position, Quaternion.identity);
        Rigidbody2D rb = egg.GetComponent<Rigidbody2D>();
        rb.velocity = transform.right * eggSpeed; // Moves egg forward
    }

    public void TakeDamage(int damage)
    {
        health -= damage;
        if (health <= 0)
        {
            Destroy(gameObject); // Chicken dies
        }
    }
}
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 5f; // Movement speed
    public float rotationSpeed = 10f; // Rotation speed

    public Joystick joystick; // Assign in Unity for mobile
    private bool isMobile; // Detects if playing on mobile

    private Rigidbody rb;

    void Start()
    {
        rb = GetComponent<Rigidbody>();
        isMobile = Application.isMobilePlatform; // Check if mobile
    }

    void Update()
    {
        if (isMobile)
        {
            MoveWithJoystick();
        }
        else
        {
            MoveWithKeyboard();
            RotateWithMouse();
        }
    }

    void MoveWithJoystick()
    {
        Vector3 moveDirection = new Vector3(joystick.Horizontal, 0, joystick.Vertical);
        rb.velocity = moveDirection * moveSpeed;
        
        if (moveDirection != Vector3.zero)
        {
            Quaternion toRotation = Quaternion.LookRotation(moveDirection, Vector3.up);
            transform.rotation = Quaternion.Slerp(transform.rotation, toRotation, rotationSpeed * Time.deltaTime);
        }
    }

    void MoveWithKeyboard()
    {
        float moveX = Input.GetAxis("Horizontal");
        float moveZ = Input.GetAxis("Vertical");
        Vector3 moveDirection = new Vector3(moveX, 0, moveZ).normalized;
        rb.velocity = moveDirection * moveSpeed;
    }

    void RotateWithMouse()
    {
        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
        if (Physics.Raycast(ray, out RaycastHit
